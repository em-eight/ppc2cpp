# Build and push artifacts
name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install LLVM
      run: choco install -y llvm
    - name: Install Ninja
      run: choco install -y ninja

    - name: Download protobuf
      run: |
        Invoke-WebRequest "https://www.dropbox.com/scl/fi/te9p80zrzcwgswrkw21en/protobuf_x64-windows.zip?rlkey=btmzjokhh256xxns348o3re7m&dl=1" -OutFile protobuf_x64-windows.zip
        7z x protobuf_x64-windows.zip
        dir

    - name: CMake generate
      shell: bash
      env:
        ARTIFACT_NAME: ppc2cpp-${{ runner.os }}
      run: |
        cmake -S . -B build -GNinja \
          -DCMAKE_INSTALL_PREFIX=$ARTIFACT_NAME \
          -DCMAKE_BUILD_TYPE=Release \
          -DBUILD_TESTING=OFF \
          -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ \
          -DCMAKE_PREFIX_PATH=protobuf_x64-windows
    - name: Build
      shell: bash
      env:
        ARTIFACT_NAME: ppc2cpp-${{ runner.os }}
      run: |
        cmake --build build --target install --parallel --verbose
        ls -lh $ARTIFACT_NAME
        ls -lh $ARTIFACT_NAME/bin
        ls -lh $ARTIFACT_NAME/lib
    
    - uses: actions/upload-artifact@v3
      if: github.ref == 'refs/heads/main' && github.repository == 'em-eight/ppc2cpp'
      with:
        name: ppc2cpp-${{ runner.os }}
        path: ppc2cpp-${{ runner.os }}